#!/usr/bin/env php
<?php

/**
 * Inits autoload. In case composer autoload is not found, will be able
 * to load Konstrui\ classes on its own.
 */
function init_autoload()
{
    $autoloadLookupPaths = [
        __DIR__ . '/vendor/autoload.php',
        __DIR__ . '/../vendor/autoload.php',
        __DIR__ . '/../../vendor/autoload.php',
    ];

    foreach ($autoloadLookupPaths as $path) {
        if (file_exists($path)) {
            require $path;

            return;
        }
    }

    spl_autoload_register(function ($className) {
        $className = ltrim($className, '\\');
        $path = __DIR__ . '/../src/' . str_replace(
            '\\',
            DIRECTORY_SEPARATOR,
            $className
        ) . '.php';

        require $path;
    });
}

init_autoload();

if (file_exists(\Konstrui\Definition\Provider\PhpProvider::PHP_BUILD_FILE)) {
    $phpProvider = new \Konstrui\Definition\Provider\PhpProvider(
        require \Konstrui\Definition\Provider\PhpProvider::PHP_BUILD_FILE
    );
    $definition = $phpProvider->provideDefinition();
    $resolver = new \Konstrui\Resolver\Resolver($definition);
    $router = new \Konstrui\Cli\Router(
        new \Konstrui\Runner\Runner($resolver, new \Konstrui\Logger\StandardLogger()),
        new \Konstrui\Cli\Command\CommandFactory(
            $definition,
            $argv[0]
        )
    );
    $router->route($argv);
} else {
    echo 'No build file found.' . PHP_EOL;

    exit(1);
}
